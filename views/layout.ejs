<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/main.css">
    <!--STYLES END-->
  </head>

  <body>
      <div class="container">
     
<nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="/">SanePharma</a>
    </div>
    <div>
      <ul class="nav navbar-nav navbar-right">
        <li><a href="#">Dashboard</a></li>
        <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="/products">Products</a>
          <ul class="dropdown-menu">
            <li><a href="/products/add-products">Add Product</a></li>
            <li><a href="#">Update Product</a></li>
            <li><a href="/search-product">Search</a></li>
          </ul>
        </li>
        
          <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Party</a>
          <ul class="dropdown-menu">
            <li><a href="/add-manufacturer">Add Manufacturer</a></li>
            <li><a href="#">Add Stockist</a></li>
            <li><a href="#">Add Employee</a></li>
            <li><a href="#">Search</a></li>
            
          </ul>
        </li>
          
        
        <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Sales</a>
          <ul class="dropdown-menu">
            <li><a href="#">Invoice Entry</a></li>
            <li><a href="#">Create Bill Header</a></li>
            <li><a href="#">Sales/Market Return</a></li>
            <li><a href="#">Customer Wise Sales Return</a></li>
            
          </ul>
        </li>
        
          
        <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Purchase</a>
          <ul class="dropdown-menu">
            <li><a href="#">Purchase Entry</a></li>
            <li><a href="#">Purchase Book</a></li>
            <li><a href="#">Product Wise purchase</a></li>
            <li><a href="#">Credit Note Entry</a></li>
            <li><a href="#">Debit Note Entry</a></li>
            <li><a href="#">Search</a></li>
            
          </ul>
        </li>
          
          
        <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Reports</a>
          <ul class="dropdown-menu">
            <li><a href="#">Print Stock Ledger</a></li>
            <li><a href="#">Print A/C ledger</a></li>
            <li><a href="#">Outstandings</a></li>
            <li><a href="#">Statements</a></li>
            <li><a href="#">Payment Reminder</a></li>
            
          </ul>
        </li>
          
          
        <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Settings<span class="caret"></span></a>
          <ul class="dropdown-menu">
            <li><a href="#">Change Password</a></li>
            <li><a href="#">Report A Bug</a></li>
            <li><a href="#">Feedback</a></li>
            <li data-toggle="modal" data-target="#myModal2"><a href="#">About</a></li>
            
          </ul>
        </li>
          
        
      </ul>
    </div>
  </div>
</nav>




      
    <%- body %>
      
    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/vendor/bootstrap.js"></script>
    <script src="/js/vendor/jquery-1.11.2.min.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
